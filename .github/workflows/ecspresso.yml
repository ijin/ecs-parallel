name: ecspresso deploy

on:
  push:
    paths:
      - "app/**"

jobs:
  invoke-get-changelist:
    uses: ./.github/workflows/get-changelist.yml
    with:
      target-path: app/
    permissions:
      pull-requests: read
      contents: read

  get-ecspresso-yml:
    runs-on: ubuntu-latest
    needs: [invoke-get-changelist]
    steps:
      - name: Checkout repo
        uses: actions/checkout@v4
  
      - name: get ecspresso config yaml files
        id: get-ecspresso-yml
        shell: bash
        env:
          APP_LIST_JSON: ${{ toJson(github.event.inputs.app-list && fromJson(github.event.inputs.app-list) || fromJson(needs.invoke-get-changelist.outputs.app-list)) }}
        run: |
          echo "APP_LIST_JSON: $APP_LIST_JSON"
  
          YAML=$(
            echo "$APP_LIST_JSON" | jq -r '.[]' | while read APP; do
              for FILE in app/"$APP"/ecspresso*.yml; do
                [ -f "$FILE" ] && echo "{\"app\":\"$APP\",\"ecspresso_yml\":\"${FILE##*/}\"}"
              done
            done | jq -s '.'
          )
  
          echo "yml=$YAML" >> $GITHUB_OUTPUT

  dir:
    runs-on: ubuntu-latest
    permissions:
      id-token: write
      contents: read
    needs: [invoke-get-changelist]
    strategy:
      fail-fast: false
      max-parallel: 5
      matrix:
        app: ${{ github.event.inputs.app-list && fromJson(github.event.inputs.app-list) || fromJson(needs.invoke-get-changelist.outputs.app-list) }}
    steps:
      - run: pwd

  deploy:
    runs-on: ubuntu-latest
    permissions:
      id-token: write
      contents: read
    needs: [invoke-get-changelist, dir, get-ecspresso-yml]
    strategy:
      fail-fast: false
      max-parallel: 5
      matrix:
        app: ${{ fromJson(needs.get-ecspresso-yml.outputs.yml) }}
    steps:
      - uses: aws-actions/configure-aws-credentials@v4
        with:
          aws-region: 'ap-northeast-1'
          role-to-assume: ${{ vars.AWS_ROLE_NAME }}

      - run: aws ecs list-clusters
      - uses: actions/checkout@v4
      - run: sudo apt -y install parallel
      - uses: kayac/ecspresso@v2
        with:
          version: latest
      - run: |
          ecspresso verify --config={{ matrix.ecspresso_file }} 
#      - name: parallel ecspresso deploy
#        shell: bash -euo pipefail {0}
#        run: |
#          ls ecspresso*.yml | parallel --delay 5 --line-buffer --tagstring "[{#}]" \
#          "TIME=$(date +%s) ecspresso deploy --config {} 2>&1 | tee /tmp/{/.}.log; echo \${PIPESTATUS[0]} > /tmp/{/.}.exit"
#          for f in ecspresso*.yml; do echo; echo -e " \n=== $f ==="; cat /tmp/${f%.yml}.log; done
#          exit $(cat /tmp/*.exit | sort -nr | head -n1)
